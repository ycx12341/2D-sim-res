setwd("D:/Academia/SCC cells simulation/SCC cells simulation more relistic (patterns fitted separately correct set.seed)/Non integer cols (ess 2500 1500 positive den correct init.)/Day 12 run 2 (To desktop 874514)")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results_r6"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r6 <- as.matrix(read.table("Round 6 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r6[i, 1:6],
prob.death = paras.r6[i, 7], prob.prof = paras.r6[i, 8])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_6_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
# Post-process round 6
ls.r6 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_6_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r6 <- rbind(ls.r6, ls.temp)
print(i)
}
ls.r6 <- unname(ls.r6)
ls.r6 <- cbind(seq(1, n.sims, by = 1), ls.r6)
ind.nan <- which(is.na(ls.r6[, 2]))
ls.r6.no.nan <- ls.r6[-ind.nan, ]
mean(ls.r6.no.nan[,2]) # 0.4797208
View(ls.r6.no.nan)
write.table(ls.r6, "Round 6 Least Square.txt")
reduction.disp(prev = 0.4959486, curr = 0.4830094)
paras.r6.mean <- apply(paras.r6, 2, mean)
set.seed(874514)
RNGkind(sample.kind = "Rejection")
paras.r6.mean.res <- calculate.sse(pars = paras.r6.mean[1:6],
prob.death = paras.r6.mean[7],
prob.prof = paras.r6.mean[8])
View(paras.r6.mean.res)
write_rds(paras.r6.mean.res, "paras r6 average result.rds")
sse.t12.r6.mean.grid <- paras.r6.mean.res$ind.position.d12
cell.coord <- which(sse.t12.r6.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 35
space.length.y <- 60
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
Round_6_paras5_res <- readRDS("D:/Academia/SCC cells simulation/SCC cells simulation more relistic (patterns fitted separately correct set.seed)/Non integer cols (ess 2500 1500 positive den correct init.)/Day 12 run 2 (To desktop 874514)/LS_results_r6/Round_6_paras5_res.rds")
View(Round_6_paras5_res)
setwd("D:/Academia/SCC cells simulation/SCC cells simulation more relistic (patterns fitted separately correct set.seed)/Non integer cols (ess 2500 1500 positive den correct init.)/Day 3 run 2")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results"
save.sims.dir <- "LS_results_norm"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
save.sims.dir <- "LS_results_r4_norm"
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results_r4_norm"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters.txt", sep = "",
header = TRUE))
kkk <- c(3,4,5)
kkk/sum(kkk)
sum(kkk/sum(kkk))
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results_r4_norm"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:10, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r4[i, 1:6], init.cells.cols = paras.r4[i, 7],
prob.death = paras.r4[i, 8], prob.prof = paras.r4[i, 9])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_4_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
View(paras.r4)
View(ests)
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results_r4_norm"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:10, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r4[i, 1:6], init.cells.cols = paras.r4[i, 7],
prob.death = paras.r4[i, 8], prob.prof = paras.r4[i, 9])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_4_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
View(ests)
rm(list = ls())
library(doParallel)
library(doRNG)
setwd("D:/Academia/SCC cells simulation/SCC cells simulation more relistic (patterns fitted separately correct set.seed)/Non integer cols (ess 2500 1500 positive den correct init.)/Day 14 run 2 (To desktop 874514)")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
set.seed(874513)
RNGkind(sample.kind = "Rejection")
dn <- runif(n.sims, 0.000069, 0.02)
gamma <- runif(n.sims, 0.005, 0.26)
rn <- runif(n.sims, 0.0008, 0.08)
eta <- runif(n.sims, 7,18)
dm <- runif(n.sims,0.0001,0.033)
alpha <- runif(n.sims,0.07,0.18)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
paras.table <- cbind(dn, gamma, rn, eta, dm, alpha,
prob.death, prob.prof)
write.table(paras.table, "Round 1 initial parameters.txt")
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests_ver2 <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.table[i, 1:6],
prob.death = paras.table[i, 7], prob.prof = paras.table[i, 8])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_1_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
# Post-process round 1
ls.r1 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_1_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r1 <- rbind(ls.r1, ls.temp)
}
ls.r1 <- unname(ls.r1)
ls.r1 <- cbind(seq(1, n.sims, by = 1), ls.r1)
ind.nan <- which(is.na(ls.r1[, 2]))
ls.r1.no.nan <- ls.r1[-ind.nan, ]
mean(ls.r1.no.nan[,2]) # 5.16795
View(ls.r1.no.nan)
write.table(ls.r1, "Round 1 Least Square.txt")
info.list.r1 <- calculate.bw(ss.mat = ls.r1, lb.bw = 2, ub.bw = 2.5,
ess.target = 2500, step.size = 0.01)
View(info.list.r1)
write_rds(info.list.r1, "Round 1 information list.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r2 <- abc_bcd(info.mat = info.list.r1$info.mat, paras.table)
write.table(paras.r2, "Round 2 parameters.txt")
apply(paras.r2, 2, min)
apply(paras.r2, 2, max)
View(info.list.r1)
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results_r2"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r2 <- as.matrix(read.table("Round 2 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r2[i, 1:6],
prob.death = paras.r2[i, 7], prob.prof = paras.r2[i, 8])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_2_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
# Post-process round 2
ls.r2 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_2_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r2 <- rbind(ls.r2, ls.temp)
print(i)
}
ls.r2 <- unname(ls.r2)
ls.r2 <- cbind(seq(1, n.sims, by = 1), ls.r2)
ind.nan <- which(is.na(ls.r2[, 2]))
ls.r2.no.nan <- ls.r2[-ind.nan, ]
mean(ls.r2.no.nan[,2]) # 1.349649
View(ls.r2.no.nan)
write.table(ls.r2, "Round 2 Least Square.txt")
info.list.r2 <- calculate.bw(ss.mat = ls.r2, lb.bw = 4.5, ub.bw = 5,
ess.target = 2250, step.size = 0.01)
View(info.list.r2)
write_rds(info.list.r2, "Round 2 information list.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r3 <- abc_bcd(info.mat = info.list.r2$info.mat, paras.r2)
write.table(paras.r3, "Round 3 parameters.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results_r3"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r3 <- as.matrix(read.table("Round 3 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r3[i, 1:6],
prob.death = paras.r3[i, 7], prob.prof = paras.r3[i, 8])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_3_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
# Post-process round 3
ls.r3 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_3_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r3 <- rbind(ls.r3, ls.temp)
print(i)
}
ls.r3 <- unname(ls.r3)
ls.r3 <- cbind(seq(1, n.sims, by = 1), ls.r3)
ind.nan <- which(is.na(ls.r3[, 2]))
ls.r3.no.nan <- ls.r3[-ind.nan, ]
mean(ls.r3.no.nan[,2]) # 0.8447736
View(ls.r3.no.nan)
write.table(ls.r3, "Round 3 Least Square.txt")
info.list.r3 <- calculate.bw(ss.mat = ls.r3, lb.bw = 6.5, ub.bw = 7,
ess.target = 2025, step.size = 0.01)
write_rds(info.list.r3, "Round 3 information list.rds")
View(info.list.r3)
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r4 <- abc_bcd(info.mat = info.list.r3$info.mat, paras.r3)
write.table(paras.r4, "Round 4 parameters.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results_r4"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r4[i, 1:6],
prob.death = paras.r4[i, 7], prob.prof = paras.r4[i, 8])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_4_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
# Post-process round 4
ls.r4 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_4_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r4 <- rbind(ls.r4, ls.temp)
print(i)
}
ls.r4 <- unname(ls.r4)
ls.r4 <- cbind(seq(1, n.sims, by = 1), ls.r4)
ind.nan <- which(is.na(ls.r4[, 2]))
ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r4.no.nan[,2]) # 0.7848564
View(ls.r4.no.nan)
write.table(ls.r4, "Round 4 Least Square.txt")
info.list.r4 <- calculate.bw(ss.mat = ls.r4, lb.bw = 7.2, ub.bw = 7.7,
ess.target = 1822.5, step.size = 0.01)
View(info.list.r4)
write_rds(info.list.r4, "Round 4 information list.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r5 <- abc_bcd(info.mat = info.list.r4$info.mat, paras.r4)
write.table(paras.r5, "Round 5 parameters.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted SCC.R")
save.sims.dir <- "LS_results_r5"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r5 <- as.matrix(read.table("Round 5 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r5[i, 1:6],
prob.death = paras.r5[i,7], prob.prof = paras.r5[i,8])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_5_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
# Post-process round 5
ls.r5 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_5_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r5 <- rbind(ls.r5, ls.temp)
print(i)
}
ls.r5 <- unname(ls.r5)
ls.r5 <- cbind(seq(1, n.sims, by = 1), ls.r5)
ind.nan <- which(is.na(ls.r5[, 2]))
ls.r5.no.nan <- ls.r5[-ind.nan, ]
mean(ls.r5.no.nan[,2]) # 0.7614607
View(ls.r5.no.nan)
write.table(ls.r5, "Round 5 Least Square.txt")
reduction.disp(prev = 0.796075, curr = 0.7772115)
paras.r5.mean <- apply(paras.r5, 2, mean)
set.seed(874514)
RNGkind(sample.kind = "Rejection")
paras.r5.mean.res <- calculate.sse(pars = paras.r5.mean[1:6],
prob.death = paras.r5.mean[7],
prob.prof = paras.r5.mean[8])
View(paras.r5.mean.res)
write_rds(paras.r5.mean.res, "paras r5 average result.rds")
sse.t14.r5.mean.grid <- paras.r5.mean.res$ind.position.d14
cell.coord <- which(sse.t14.r5.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 35
space.length.y <- 60
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
`Round 1 information list` <- readRDS("D:/Academia/SCC cells simulation/SCC cells simulation more relistic (patterns fitted separately correct set.seed)/Non integer cols (ess 2500 1500 positive den correct init.)/Day 14 run 2 (To desktop 874514)/Round 1 information list.rds")
`Round 2 information list` <- readRDS("D:/Academia/SCC cells simulation/SCC cells simulation more relistic (patterns fitted separately correct set.seed)/Non integer cols (ess 2500 1500 positive den correct init.)/Day 14 run 2 (To desktop 874514)/Round 2 information list.rds")
`Round 3 information list` <- readRDS("D:/Academia/SCC cells simulation/SCC cells simulation more relistic (patterns fitted separately correct set.seed)/Non integer cols (ess 2500 1500 positive den correct init.)/Day 14 run 2 (To desktop 874514)/Round 3 information list.rds")
`Round 4 information list` <- readRDS("D:/Academia/SCC cells simulation/SCC cells simulation more relistic (patterns fitted separately correct set.seed)/Non integer cols (ess 2500 1500 positive den correct init.)/Day 14 run 2 (To desktop 874514)/Round 4 information list.rds")
View(`Round 1 information list`)
View(`Round 2 information list`)
View(`Round 3 information list`)
View(`Round 4 information list`)
