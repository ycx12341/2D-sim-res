names(ls.r7.crage)[i] <- paste0("info_list_r7_",ls.r7.pert.sort.min[i])
print(c(i, info.list.temp$bw.obj, info.list.temp$ess.obj))
}
View(paras.r7.output.pert)
write_rds(ls.r7.crage, "Coverage_test_disp_wt_prob_r6_d1_d3_pert_sep.rds")
View(paras.r7)
# An empty matrix used to store all the coverage probabilities
# regarding each perturbed dataset.
cov.mat <- matrix(0, nrow = 200, ncol = (length(paras.r7[1,]) - 1))
# Coverage probabilities
for (i in 1:200) {
# Read in the information matrix regarding each perturbed dataset
info.mat.temp <- ls.r7.crage[[i]]$info.mat
# Remove the parameter set which generated the perturbed dataset,
# in order to keep the indices consistent
paras.r7.corres <- paras.r7[-ls.r7.pert.sort.min[i],]
# For each parameter, calculate its coverage probability
prob.vec <- vector()
for (j in 1:(length(paras.r7[1,]) - 1)) {
cov.ind.temp <- which(paras.r7.corres[, (j + 1)] <= paras.r7[ls.r7.pert.sort.min[i], (j + 1)])
prob.temp <- sum(info.mat.temp[cov.ind.temp, length(info.mat.temp[1,])])/sum(info.mat.temp[,length(info.mat.temp[1,])])
# prob.temp <- length(cov.ind.temp)/length(info.mat.temp[,8])
# prob.temp <- (1 + length(cov.ind.temp))/(2 + length(info.mat.temp[,8]))
prob.vec <- c(prob.vec, prob.temp)
}
# Store the coverage probability corresponding to each perturbed dataset into
# each row of the coverage probability matrix.
cov.mat[i, ] <- prob.vec
}
write.table(cov.mat, "Coverage probabilities glioma r3 d1 d3 perturbed separately.txt")
# Histograms
set.seed(874512)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of rn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of R_{init.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of P_{ext.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of P_{mit.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,5], unif.sample)
sort(cov.mat[,1])
hist(sort(cov.mat[,1]), main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,1], unif.sample)
ks.test(sort(cov.mat[,1]), unif.sample)
write_rds(ls.r7.crage, "Coverage_test_disp_wt_prob_r7_d1_d3_pert_sep.rds")
# An empty matrix used to store all the coverage probabilities
# regarding each perturbed dataset.
cov.mat <- matrix(0, nrow = 200, ncol = (length(paras.r7[1,]) - 1))
# Coverage probabilities
for (i in 1:200) {
# Read in the information matrix regarding each perturbed dataset
info.mat.temp <- ls.r7.crage[[i]]$info.mat
# Remove the parameter set which generated the perturbed dataset,
# in order to keep the indices consistent
paras.r7.corres <- paras.r7[-ls.r7.pert.sort.min[i],]
# For each parameter, calculate its coverage probability
prob.vec <- vector()
for (j in 1:(length(paras.r7[1,]) - 1)) {
cov.ind.temp <- which(paras.r7.corres[, (j + 1)] <= paras.r7[ls.r7.pert.sort.min[i], (j + 1)])
prob.temp <- sum(info.mat.temp[cov.ind.temp, length(info.mat.temp[1,])])/sum(info.mat.temp[,length(info.mat.temp[1,])])
# prob.temp <- length(cov.ind.temp)/length(info.mat.temp[,8])
# prob.temp <- (1 + length(cov.ind.temp))/(2 + length(info.mat.temp[,8]))
prob.vec <- c(prob.vec, prob.temp)
}
# Store the coverage probability corresponding to each perturbed dataset into
# each row of the coverage probability matrix.
cov.mat[i, ] <- prob.vec
}
write.table(cov.mat, "Coverage probabilities glioma r7 d1 d3 perturbed separately.txt")
# Histograms
set.seed(874512)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,1], unif.sample)
ls.r7.crage <- read_rds("Coverage_test_disp_wt_prob_r7_d1_d3_pert_sep_non_zero.rds")
# An empty matrix used to store all the coverage probabilities
# regarding each perturbed dataset.
cov.mat <- matrix(0, nrow = 200, ncol = (length(paras.r7[1,]) - 1))
# Coverage probabilities
for (i in 1:200) {
# Read in the information matrix regarding each perturbed dataset
info.mat.temp <- ls.r7.crage[[i]]$info.mat
# Remove the parameter set which generated the perturbed dataset,
# in order to keep the indices consistent
paras.r7.corres <- paras.r7[-ls.r7.pert.sort.min[i],]
# For each parameter, calculate its coverage probability
prob.vec <- vector()
for (j in 1:(length(paras.r7[1,]) - 1)) {
cov.ind.temp <- which(paras.r7.corres[, (j + 1)] <= paras.r7[ls.r7.pert.sort.min[i], (j + 1)])
prob.temp <- sum(info.mat.temp[cov.ind.temp, length(info.mat.temp[1,])])/sum(info.mat.temp[,length(info.mat.temp[1,])])
# prob.temp <- length(cov.ind.temp)/length(info.mat.temp[,8])
# prob.temp <- (1 + length(cov.ind.temp))/(2 + length(info.mat.temp[,8]))
prob.vec <- c(prob.vec, prob.temp)
}
# Store the coverage probability corresponding to each perturbed dataset into
# each row of the coverage probability matrix.
cov.mat[i, ] <- prob.vec
}
# Store the coverage probabilities
write.table(cov.mat, "Coverage probabilities glioma r7 d1 d3 perturbed separately non zero only.txt")
View(cov.mat)
# Histograms
set.seed(874512)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of rn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of R_{init.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of P_{ext.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of P_{mit.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,5], unif.sample)
paras.r7.output.pert <- vector(mode = "list")
set.seed(874512)
RNGkind(sample.kind = "Rejection")
for (i in 1:length(paras.r7.output)) {
ls.temp <- paras.r7.output[[i]]
# Read the unperturbed data
den.mat.d1.temp.unpert <- ls.temp$den.mat.d1
den.mat.d3.temp.unpert <- ls.temp$den.mat.d3
# Create empty matrices to store perturbed data
den.mat.d1.temp.pert <- matrix(0, nrow = nrow(den.mat.d1.temp.unpert),
ncol = ncol(den.mat.d1.temp.unpert))
den.mat.d3.temp.pert <- matrix(0, nrow = nrow(den.mat.d3.temp.unpert),
ncol = ncol(den.mat.d3.temp.unpert))
# Add perturbation (to non-zero data only)
for (j in 1:length(den.mat.d1.temp.unpert)) {
if(den.mat.d1.temp.unpert[j] != 0) {
den.mat.d1.temp.pert[j] <- rnorm(1, den.mat.d1.temp.unpert[j], sd = sd.r7.d1.min)
while (den.mat.d1.temp.pert[j] < 0 || den.mat.d1.temp.pert[j] > 1) {
den.mat.d1.temp.pert[j] <- rnorm(1, den.mat.d1.temp.unpert[j], sd = sd.r7.d1.min)
}
}
if (den.mat.d3.temp.unpert[j] != 0) {
den.mat.d3.temp.pert[j] <- rnorm(1, den.mat.d3.temp.unpert[j], sd = sd.r7.d3.min)
while (den.mat.d3.temp.pert[j] < 0 || den.mat.d3.temp.pert[j] > 1) {
den.mat.d3.temp.pert[j] <- rnorm(1, den.mat.d3.temp.unpert[j], sd = sd.r7.d3.min)
}
}
}
# Sum of squared differences between the perturbed densities and the observed densities
sse.d1.temp <- sum((ref.den$t1.ref.den - den.mat.d1.temp.pert)^2)
sse.d3.temp <- sum((ref.den$t3.ref.den - den.mat.d3.temp.pert)^2)
diff.temp.pert <- sum(sse.d1.temp, sse.d3.temp)
# Store each set of perturbed data into the list
paras.r7.output.pert[[i]] <- list(den.mat.d1.pert = den.mat.d1.temp.pert,
den.mat.d3.pert = den.mat.d3.temp.pert,
diff = diff.temp.pert)
# Name the elements in the list with correct indices
names(paras.r7.output.pert)[i] <- paste0("ls_r7_",i,"_pert")
print(i)
}
# Sort the sum of squared differences
ls.r7.pert <- matrix(0, nrow = length(ls.r7[,2])
,ncol = 2)
for (i in 1:length(ls.r7[,2])) {
ls.r7.pert[i,] <- c(i, as.double(paras.r7.output.pert[[i]]$diff))
}
ls.r7.pert.sort <- order(ls.r7.pert[,2])
ls.r7.pert.sort.min <- ls.r7.pert.sort[1:200]
View(ls.r7.crage)
# An empty matrix used to store all the coverage probabilities
# regarding each perturbed dataset.
cov.mat <- matrix(0, nrow = 200, ncol = (length(paras.r7[1,]) - 1))
# Coverage probabilities
for (i in 1:200) {
# Read in the information matrix regarding each perturbed dataset
info.mat.temp <- ls.r7.crage[[i]]$info.mat
# Remove the parameter set which generated the perturbed dataset,
# in order to keep the indices consistent
paras.r7.corres <- paras.r7[-ls.r7.pert.sort.min[i],]
# For each parameter, calculate its coverage probability
prob.vec <- vector()
for (j in 1:(length(paras.r7[1,]) - 1)) {
cov.ind.temp <- which(paras.r7.corres[, (j + 1)] <= paras.r7[ls.r7.pert.sort.min[i], (j + 1)])
prob.temp <- sum(info.mat.temp[cov.ind.temp, length(info.mat.temp[1,])])/sum(info.mat.temp[,length(info.mat.temp[1,])])
# prob.temp <- length(cov.ind.temp)/length(info.mat.temp[,8])
# prob.temp <- (1 + length(cov.ind.temp))/(2 + length(info.mat.temp[,8]))
prob.vec <- c(prob.vec, prob.temp)
}
# Store the coverage probability corresponding to each perturbed dataset into
# each row of the coverage probability matrix.
cov.mat[i, ] <- prob.vec
}
# Store the coverage probabilities
write.table(cov.mat, "Coverage probabilities glioma r7 d1 d3 perturbed separately non zero only.txt")
# Histograms
set.seed(874512)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of rn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of R_{init.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of P_{ext.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of P_{mit.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,5], unif.sample)
Coverage_test_disp_wt_prob_r6_d1_d3_pert_sep <- readRDS("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Coverage test on run 2 final result/Coverage_test_disp_wt_prob_r6_d1_d3_pert_sep.rds")
Coverage_test_disp_wt_prob_r7_d1_d3_pert_sep <- readRDS("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Coverage test on run 2 final result/Coverage_test_disp_wt_prob_r7_d1_d3_pert_sep.rds")
View(Coverage_test_disp_wt_prob_r6_d1_d3_pert_sep)
View(Coverage_test_disp_wt_prob_r7_d1_d3_pert_sep)
cov.mat <- read.table("Coverage probabilities glioma r7 d1 d3 perturbed separately non zero only.txt",
sep = "", header = TRUE)
# Histograms
set.seed(874512)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of rn",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of R_{init.}",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of P_{ext.}",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of P_{mit.}",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
hist(cov.mat[,1], main = "Coverage check of dn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of R_{init.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of P_{ext.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of P_{mit.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Coverage test on run 1 final result")
cov.mat <- read.table("Coverage probabilities glioma r7 d1 d3 perturbed separately non zero only.txt", sep = "",
header = TRUE)
# Histograms
set.seed(874513)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of R_{init.}'s final sample",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,3], main = "Coverage check of R_{init.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of P_{ext.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of P_{mit.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Coverage test on run 3 final result")
cov.mat <- read.table("Coverage probabilities glioma r7 d1 d3 perturbed separately non zero only.txt", sep = "",
header = TRUE)
# Histograms
set.seed(874514)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
hist(cov.mat[,1], main = "Coverage check of dn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of R_{init.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of P_{ext.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of P_{mit.}",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
hist(cov.mat[,5], main = "Coverage check of P_{mit.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
cov.mat <- read.table("Coverage probabilities r11 non zero only.txt", sep = "",
header = TRUE)
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 3 simulations/CT on run 3 d3")
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 3 simulations/CT on run 3 d3")
cov.mat <- read.table("Coverage probabilities r11 non zero only.txt", sep = "",
header = TRUE)
# Histograms
set.seed(874512)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,1], main = "Coverage check of dn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of gamma's final sample",
xlim = c(0,1), xlab = "Probabilities")
hist(cov.mat[,2], main = "Coverage check of gamma's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities")
hist(cov.mat[,3], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of eta's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of dm's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
hist(cov.mat[,6], main = "Coverage check of alpha's final sample",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,6], unif.sample)
hist(cov.mat[,6], main = "Coverage check of alpha's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,6], unif.sample)
hist(cov.mat[,7], main = "Coverage check of R_{init.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,7], unif.sample)
hist(cov.mat[,8], main = "Coverage check of P_{ext.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,8], unif.sample)
hist(cov.mat[,9], main = "Coverage check of P_{mit.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,9], unif.sample)
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 6 simulations/CT on run 2 d6")
cov.mat <- read.table("Coverage probabilities r6 non zero only.txt", sep = "",
header = TRUE)
# Histograms
set.seed(874514)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
hist(cov.mat[,1], main = "Coverage check of dn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of gamma's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
View(cov.mat)
hist(cov.mat[,4], main = "Coverage check of eta's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of dm's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
hist(cov.mat[,6], main = "Coverage check of alpha's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,6], unif.sample)
hist(cov.mat[,7], main = "Coverage check of P_{ext.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,7], unif.sample)
hist(cov.mat[,8], main = "Coverage check of P_{mit.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,8], unif.sample)
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 9 simulations/CT on run 1 d9")
cov.mat <- read.table("Coverage probabilities r6 non zero only.txt", sep = "",
header = TRUE)
# Histograms
set.seed(874513)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of gamma",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of rn",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of eta",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of dm",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,5], unif.sample)
hist(cov.mat[,6], main = "Coverage check of alpha",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,6], unif.sample)
hist(cov.mat[,7], main = "Coverage check of P_{ext.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,7], unif.sample)
hist(cov.mat[,8], main = "Coverage check of P_{mit.}",
xlim = c(0,1), xlab = "Probabilities")
ks.test(cov.mat[,8], unif.sample)
# Histograms
set.seed(874513)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of gamma's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of eta's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of dm's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
hist(cov.mat[,6], main = "Coverage check of alpha's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,6], unif.sample)
hist(cov.mat[,7], main = "Coverage check of P_{ext.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,7], unif.sample)
hist(cov.mat[,8], main = "Coverage check of P_{mit.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,8], unif.sample)
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 12 simulations/CT on run 1 d12")
cov.mat <- read.table("Coverage probabilities r6 non zero only.txt", sep = "",
header = TRUE)
# Histograms
set.seed(874513)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of gamma's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of eta's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of dm's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
hist(cov.mat[,6], main = "Coverage check of alpha's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,6], unif.sample)
hist(cov.mat[,7], main = "Coverage check of P_{ext.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,7], unif.sample)
hist(cov.mat[,8], main = "Coverage check of P_{mit.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,8], unif.sample)
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 14 simulations/CT on run 2 d14")
cov.mat <- read.table("Coverage probabilities r5 non zero only.txt", sep = "",
header = TRUE)
# Histograms
set.seed(874514)
unif.sample <- runif(200, 0, 1)
hist(cov.mat[,1], main = "Coverage check of dn",
xlim = c(0,1), xlab = "Probabilities")
hist(cov.mat[,1], main = "Coverage check of dn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,1], unif.sample)
hist(cov.mat[,2], main = "Coverage check of gamma's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,2], unif.sample)
hist(cov.mat[,3], main = "Coverage check of rn's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,3], unif.sample)
hist(cov.mat[,4], main = "Coverage check of eta's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,4], unif.sample)
hist(cov.mat[,5], main = "Coverage check of dm's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,5], unif.sample)
hist(cov.mat[,6], main = "Coverage check of alpha's final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,6], unif.sample)
hist(cov.mat[,7], main = "Coverage check of P_{ext.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,7], unif.sample)
hist(cov.mat[,8], main = "Coverage check of P_{mit.}'s final sample",
xlim = c(0,1), xlab = "Probabilities", freq = FALSE)
ks.test(cov.mat[,8], unif.sample)
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Run 1")
