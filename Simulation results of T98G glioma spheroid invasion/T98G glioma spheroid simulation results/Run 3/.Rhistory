init.cells.rads <- runif(n.sims, 0.01, 0.15)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
paras.table <- cbind(dn, rn, init.cells.rads,
prob.death, prob.prof)
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests_ver3 <- foreach (i = 1:5, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.table[i, 1:2], init.cells.rad = paras.table[i, 3],
prob.death = paras.table[i, 4], prob.prof = paras.table[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_1_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
View(ests_ver3)
`Round 2 information list` <- readRDS("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Run 2/Round 2 information list.rds")
View(`Round 2 information list`)
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r3"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r3 <- as.matrix(read.table("Round 3 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r3[i, 1:2], init.cells.rad = paras.r3[i, 3],
prob.death = paras.r3[i, 4], prob.prof = paras.r3[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_3_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r3 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_3_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r3 <- rbind(ls.r3, ls.temp)
print(i)
}
ls.r3 <- unname(ls.r3)
ls.r3 <- cbind(seq(1, n.sims, by = 1), ls.r3)
ind.nan <- which(is.na(ls.r3[, 2]))
ls.r3.no.nan <- ls.r3[-ind.nan, ]
mean(ls.r3.no.nan[,2]) # 3.489736
View(ls.r3.no.nan)
write.table(ls.r3, "Round 3 Least Square.txt")
info.list.r3 <- calculate.bw(ss.mat = ls.r3, lb.bw = 4.2, ub.bw = 4.4,
ess.target = 2025, step.size = 0.01)
View(info.list.r3)
info.list.r3 <- calculate.bw(ss.mat = ls.r3, lb.bw = 4.0, ub.bw = 4.2,
ess.target = 2025, step.size = 0.01)
View(info.list.r3)
write_rds(info.list.r3, "Round 3 information list.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r4 <- abc_bcd(info.mat = info.list.r3$info.mat, paras.r3)
write.table(paras.r4, "Round 4 parameters.txt")
setwd("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Run 3")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_ver2"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
set.seed(874513)
RNGkind(sample.kind = "Rejection")
dn <- runif(n.sims, 0.000069, 0.02)
rn <- runif(n.sims,0,0.0035)
init.cells.rads <- runif(n.sims, 0.01, 0.15)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
paras.table <- cbind(dn, rn, init.cells.rads,
prob.death, prob.prof)
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests_ver3 <- foreach (i = 1:5, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.table[i, 1:2], init.cells.rad = paras.table[i, 3],
prob.death = paras.table[i, 4], prob.prof = paras.table[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_1_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
View(ests_ver3)
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r4"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters.txt", sep = "",
header = TRUE))
setwd("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Run 2")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r4"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r4[i, 1:2], init.cells.rad = paras.r4[i, 3],
prob.death = paras.r4[i, 4], prob.prof = paras.r4[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_4_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
warnings()
ls.r4 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_4_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r4 <- rbind(ls.r4, ls.temp)
print(i)
}
ls.r4 <- unname(ls.r4)
ls.r4 <- cbind(seq(1, n.sims, by = 1), ls.r4)
ind.nan <- which(is.na(ls.r4[, 2]))
ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r4[,2]) # 2.045236
View(ls.r4)
write.table(ls.r4, "Round 4 Least Square.txt")
info.list.r4 <- calculate.bw(ss.mat = ls.r4, lb.bw = 5.0, ub.bw = 5.3,
ess.target = 1822.5, step.size = 0.01)
View(info.list.r4)
info.list.r4 <- calculate.bw(ss.mat = ls.r4, lb.bw = 8.0, ub.bw = 8.3,
ess.target = 1822.5, step.size = 0.01)
View(info.list.r4)
info.list.r4 <- calculate.bw(ss.mat = ls.r4, lb.bw = 7.5, ub.bw = 8.0,
ess.target = 1822.5, step.size = 0.01)
View(info.list.r4)
write_rds(info.list.r4, "Round 4 information list.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r5 <- abc_bcd(info.mat = info.list.r4$info.mat, paras.r4)
write.table(paras.r5, "Round 5 parameters.txt")
setwd("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Run 2")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r5"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r5 <- as.matrix(read.table("Round 5 parameters.txt", sep = "",
header = TRUE))
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r4"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r4[i, 1:2], init.cells.rad = paras.r4[i, 3],
prob.death = paras.r4[i, 4], prob.prof = paras.r4[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_4_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r4 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_4_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r4 <- rbind(ls.r4, ls.temp)
print(i)
}
ls.r4 <- unname(ls.r4)
ls.r4 <- cbind(seq(1, n.sims, by = 1), ls.r4)
ind.nan <- which(is.na(ls.r4[, 2]))
ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r4[,2]) # 2.027271
View(ls.r4)
write.table(ls.r4, "Round 4 Least Square.txt")
info.list.r4 <- calculate.bw(ss.mat = ls.r4, lb.bw = 7.5, ub.bw = 8.0,
ess.target = 1822.5, step.size = 0.01)
View(info.list.r4)
info.list.r4 <- calculate.bw(ss.mat = ls.r4, lb.bw = 7.3, ub.bw = 7.5,
ess.target = 1822.5, step.size = 0.01)
View(info.list.r4)
write_rds(info.list.r4, "Round 4 information list.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r5 <- abc_bcd(info.mat = info.list.r4$info.mat, paras.r4)
write.table(paras.r5, "Round 5 parameters.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r5"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r5 <- as.matrix(read.table("Round 5 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r5[i, 1:2], init.cells.rad = paras.r5[i, 3],
prob.death = paras.r5[i, 4], prob.prof = paras.r5[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_5_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r5 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_5_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r5 <- rbind(ls.r5, ls.temp)
print(i)
}
ls.r5 <- unname(ls.r5)
ls.r5 <- cbind(seq(1, n.sims, by = 1), ls.r5)
ind.nan <- which(is.na(ls.r5[, 2]))
# ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r5[,2]) # 1.642071
View(ls.r5)
write.table(ls.r5, "Round 5 Least Square.txt")
info.list.r5 <- calculate.bw(ss.mat = ls.r5, lb.bw = 9.8, ub.bw = 10.0,
ess.target = 1640.25, step.size = 0.01)
View(info.list.r5)
write_rds(info.list.r5, "Round 5 information list.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r6 <- abc_bcd(info.mat = info.list.r5$info.mat, paras.r5)
write.table(paras.r6, "Round 6 parameters.txt")
View(info.list.r5)
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r6"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r6 <- as.matrix(read.table("Round 6 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r6[i, 1:2], init.cells.rad = paras.r6[i, 3],
prob.death = paras.r6[i, 4], prob.prof = paras.r6[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_6_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r6 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_6_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r6 <- rbind(ls.r6, ls.temp)
print(i)
}
ls.r6 <- unname(ls.r6)
ls.r6 <- cbind(seq(1, n.sims, by = 1), ls.r6)
ind.nan <- which(is.na(ls.r6[, 2]))
# ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r6[,2]) # 0.5480931
View(ls.r6)
write.table(ls.r6, "Round 6 Least Square.txt")
info.list.r6 <- calculate.bw(ss.mat = ls.r6, lb.bw = 5, ub.bw = 5.7,
ess.target = 2500, step.size = 0.01)
View(info.list.r6)
info.list.r6 <- calculate.bw(ss.mat = ls.r6, lb.bw = 9, ub.bw = 9.2,
ess.target = 2500, step.size = 0.01)
View(info.list.r6)
info.list.r6 <- calculate.bw(ss.mat = ls.r6, lb.bw = 8.8, ub.bw = 9.0,
ess.target = 2500, step.size = 0.01)
View(info.list.r6)
info.list.r6 <- calculate.bw(ss.mat = ls.r6, lb.bw = 8.7, ub.bw = 8.8,
ess.target = 2500, step.size = 0.01)
View(info.list.r6)
info.list.r6 <- calculate.bw(ss.mat = ls.r6, lb.bw = 8.6, ub.bw = 8.8,
ess.target = 2500, step.size = 0.01)
View(info.list.r6)
write_rds(info.list.r6, "Round 6 information list.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r7 <- abc_bcd(info.mat = info.list.r6$info.mat, paras.r6)
write.table(paras.r7, "Round 7 parameters.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r7"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r7 <- as.matrix(read.table("Round 7 parameters.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r7[i, 1:2], init.cells.rad = paras.r7[i, 3],
prob.death = paras.r7[i, 4], prob.prof = paras.r7[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_7_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r7 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_7_paras",i,"_res.rds"))
ls.temp <- res.temp$diff
ls.r7 <- rbind(ls.r7, ls.temp)
print(i)
}
ls.r7 <- unname(ls.r7)
ls.r7 <- cbind(seq(1, n.sims, by = 1), ls.r7)
ind.nan <- which(is.na(ls.r7[, 2]))
# ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r7[,2]) # 0.5256493
View(ls.r7)
write.table(ls.r7, "Round 7 Least Square.txt")
reduction.disp(prev = 1.541068, curr = 1.506051)
paras.r7.mean <- apply(paras.r7, 2, mean)
set.seed(874512)
RNGkind(sample.kind = "Rejection")
paras.r7.mean.res <- calculate.sse(pars = paras.r7.mean[1:2],
init.cells.rad = paras.r7.mean[3],
prob.death = paras.r7.mean[4],
prob.prof = paras.r7.mean[5])
View(paras.r7.mean.res)
write_rds(paras.r7.mean.res, "paras r7 average result.rds")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted new ver.r")
save.sims.dir <- "LS_results_ver2"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
set.seed(874513)
RNGkind(sample.kind = "Rejection")
dn <- runif(n.sims, 0.000069, 0.02)
rn <- runif(n.sims,0,0.0035)
init.cells.rads <- runif(n.sims, 0.01, 0.15)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
paras.table <- cbind(dn, rn, init.cells.rads,
prob.death, prob.prof)
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests_ver3 <- foreach (i = 1:4, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.table[i, 1:2], init.cells.rad = paras.table[i, 3],
prob.death = paras.table[i, 4], prob.prof = paras.table[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_1_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
View(ests_ver3)
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Run 3")
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/Run 3")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted new ver.r")
save.sims.dir <- "LS_results_ver2"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
set.seed(874513)
RNGkind(sample.kind = "Rejection")
dn <- runif(n.sims, 0.000069, 0.02)
rn <- runif(n.sims,0,0.0035)
init.cells.rads <- runif(n.sims, 0.01, 0.15)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
paras.table <- cbind(dn, rn, init.cells.rads,
prob.death, prob.prof)
registerDoRNG(874514, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests_ver3 <- foreach (i = 1:4, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.table[i, 1:2], init.cells.rad = paras.table[i, 3],
prob.death = paras.table[i, 4], prob.prof = paras.table[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_1_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
View(ests_ver3)
