setwd("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 2")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r2"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r2 <- as.matrix(read.table("Round 2 parameters log transform.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r2[i, 1:2], init.cells.rad = paras.r2[i, 3],
prob.death = paras.r2[i, 4], prob.prof = paras.r2[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_2_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r2 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_2_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r2 <- rbind(ls.r2, ls.temp)
print(i)
}
ls.r2 <- unname(ls.r2)
ls.r2 <- cbind(seq(1, n.sims, by = 1), ls.r2)
ind.nan <- which(is.na(ls.r2[, 2]))
ls.r2.no.nan <- ls.r2[-ind.nan, ]
mean(ls.r2[,2]) # 3.38769
mean(ls.r2.no.nan[,2]) # 3.38769
View(ls.r2.no.nan)
write.table(ls.r2, "Round 2 Least Square.txt")
ls.r2.min <- read_rds("Round_2_paras5936_res.rds")
den.mat.d1.r2.min <- ls.r2.min$den.mat.d1
den.mat.d3.r2.min <- ls.r2.min$den.mat.d3
sd.den.mat.d1.r2.min <- sd(den.mat.d1.r2.min - t1.ref.den)
sd.den.mat.d3.r2.min <- sd(den.mat.d3.r2.min - t3.ref.den)
info.list.r2 <- calculate.bw(ss.mat = ls.r2, min.sd.d1 = sd.den.mat.d1.r2.min,
min.sd.d3 = sd.den.mat.d3.r2.min,
ess.target = 2250, step.size = 0.0001)
View(info.list.r2)
write_rds(info.list.r2, "Round 2 information list log transform.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r3 <- abc_bcd(info.mat = info.list.r2$info.mat, paras.r2)
write.table(paras.r3, "Round 3 parameters log transform.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r3"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r3 <- as.matrix(read.table("Round 3 parameters log transform.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r3[i, 1:2], init.cells.rad = paras.r3[i, 3],
prob.death = paras.r3[i, 4], prob.prof = paras.r3[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_3_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r3 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_3_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r3 <- rbind(ls.r3, ls.temp)
print(i)
}
ls.r3 <- unname(ls.r3)
ls.r3 <- cbind(seq(1, n.sims, by = 1), ls.r3)
ind.nan <- which(is.na(ls.r3[, 2]))
ls.r3.no.nan <- ls.r3[-ind.nan, ]
mean(ls.r3[,2]) # 2.122
mean(ls.r3.no.nan[,2]) # 2.122
View(ls.r3.no.nan)
write.table(ls.r3, "Round 3 Least Square.txt")
ls.r3.min <- read_rds("Round_3_paras6544_res.rds")
den.mat.d1.r3.min <- ls.r3.min$den.mat.d1
den.mat.d3.r3.min <- ls.r3.min$den.mat.d3
sd.den.mat.d1.r3.min <- sd(den.mat.d1.r3.min - t1.ref.den)
sd.den.mat.d3.r3.min <- sd(den.mat.d3.r3.min - t3.ref.den)
info.list.r3 <- calculate.bw(ss.mat = ls.r3, min.sd.d1 = sd.den.mat.d1.r3.min,
min.sd.d3 = sd.den.mat.d3.r3.min,
ess.target = 2050, step.size = 0.0001)
write_rds(info.list.r3, "Round 3 information list log transform.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r4 <- abc_bcd(info.mat = info.list.r3$info.mat, paras.r3)
write.table(paras.r4, "Round 4 parameters log transform.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r4"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters log transform.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r4[i, 1:2], init.cells.rad = paras.r4[i, 3],
prob.death = paras.r4[i, 4], prob.prof = paras.r4[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_4_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r4 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_4_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r4 <- rbind(ls.r4, ls.temp)
print(i)
}
ls.r4 <- unname(ls.r4)
ls.r4 <- cbind(seq(1, n.sims, by = 1), ls.r4)
ind.nan <- which(is.na(ls.r4[, 2]))
ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r4[,2]) # 1.731052
View(ls.r4)
write.table(ls.r4, "Round 4 Least Square.txt")
ls.r4.min <- read_rds("Round_4_paras3200_res.rds")
den.mat.d1.r4.min <- ls.r4.min$den.mat.d1
den.mat.d3.r4.min <- ls.r4.min$den.mat.d3
sd.den.mat.d1.r4.min <- sd(den.mat.d1.r4.min - t1.ref.den)
sd.den.mat.d3.r4.min <- sd(den.mat.d3.r4.min - t3.ref.den)
2050*0.9
2250*0.9
2500*0.9
2250*0.9
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r3"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.sims <- 10000
ls.r3 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_3_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r3 <- rbind(ls.r3, ls.temp)
print(i)
}
ls.r3 <- unname(ls.r3)
ls.r3 <- cbind(seq(1, n.sims, by = 1), ls.r3)
ind.nan <- which(is.na(ls.r3[, 2]))
ls.r3.no.nan <- ls.r3[-ind.nan, ]
mean(ls.r3.no.nan[,2]) # 3.283589
write.table(ls.r3, "Round 3 Least Square.txt")
ls.r3.min <- read_rds("Round_3_paras6544_res.rds")
den.mat.d1.r3.min <- ls.r3.min$den.mat.d1
den.mat.d3.r3.min <- ls.r3.min$den.mat.d3
sd.den.mat.d1.r3.min <- sd(den.mat.d1.r3.min - t1.ref.den)
sd.den.mat.d3.r3.min <- sd(den.mat.d3.r3.min - t3.ref.den)
info.list.r3 <- calculate.bw(ss.mat = ls.r3, min.sd.d1 = sd.den.mat.d1.r3.min,
min.sd.d3 = sd.den.mat.d3.r3.min,
ess.target = 2025, step.size = 0.0001)
View(info.list.r3)
`Round 3 information list log transform` <- readRDS("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 2/Round 3 information list log transform.rds")
View(`Round 3 information list log transform`)
write_rds(info.list.r3, "Round 3 information list log transform.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r4 <- abc_bcd(info.mat = info.list.r3$info.mat, paras.r3)
paras.r3 <- as.matrix(read.table("Round 3 parameters log transform.txt", sep = "",
header = TRUE))
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r4 <- abc_bcd(info.mat = info.list.r3$info.mat, paras.r3)
write.table(paras.r4, "Round 4 parameters log transform.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r4"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters log transform.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r4[i, 1:2], init.cells.rad = paras.r4[i, 3],
prob.death = paras.r4[i, 4], prob.prof = paras.r4[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_4_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
`Round 3 information list log transform` <- readRDS("~/Academia Yunchen/Glioma simulations/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 2/Round 3 information list log transform.rds")
View(`Round 3 information list log transform`)
ls.r4 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_4_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r4 <- rbind(ls.r4, ls.temp)
print(i)
}
ls.r4 <- unname(ls.r4)
ls.r4 <- cbind(seq(1, n.sims, by = 1), ls.r4)
ind.nan <- which(is.na(ls.r4[, 2]))
ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r4[,2]) # 1.901705
View(ls.r4)
write.table(ls.r4, "Round 4 Least Square.txt")
ls.r4.min <- read_rds("Round_4_paras1012_res.rds")
den.mat.d1.r4.min <- ls.r4.min$den.mat.d1
den.mat.d3.r4.min <- ls.r4.min$den.mat.d3
sd.den.mat.d1.r4.min <- sd(den.mat.d1.r4.min - t1.ref.den)
sd.den.mat.d3.r4.min <- sd(den.mat.d3.r4.min - t3.ref.den)
2025*0.9
info.list.r4 <- calculate.bw(ss.mat = ls.r4, min.sd.d1 = sd.den.mat.d1.r4.min,
min.sd.d3 = sd.den.mat.d3.r4.min,
ess.target = 1822.5, step.size = 0.0001)
write_rds(info.list.r4, "Round 4 information list log transform.rds")
View(info.list.r4)
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r5 <- abc_bcd(info.mat = info.list.r4$info.mat, paras.r4)
write.table(paras.r5, "Round 5 parameters log transform.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r5"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r5 <- as.matrix(read.table("Round 5 parameters log transform.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r5[i, 1:2], init.cells.rad = paras.r5[i, 3],
prob.death = paras.r5[i, 4], prob.prof = paras.r5[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_5_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r5 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_5_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r5 <- rbind(ls.r5, ls.temp)
print(i)
}
ls.r5 <- unname(ls.r5)
ls.r5 <- cbind(seq(1, n.sims, by = 1), ls.r5)
ind.nan <- which(is.na(ls.r5[, 2]))
# ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r5[,2]) # 1.558727
View(ls.r5)
write.table(ls.r5, "Round 5 Least Square.txt")
ls.r5.min <- read_rds("Round_5_paras5099_res.rds")
den.mat.d1.r5.min <- ls.r5.min$den.mat.d1
den.mat.d3.r5.min <- ls.r5.min$den.mat.d3
sd.den.mat.d1.r5.min <- sd(den.mat.d1.r5.min - t1.ref.den)
sd.den.mat.d3.r5.min <- sd(den.mat.d3.r5.min - t3.ref.den)
1822.5*0.9
info.list.r5 <- calculate.bw(ss.mat = ls.r5, min.sd.d1 = sd.den.mat.d1.r5.min,
min.sd.d3 = sd.den.mat.d3.r5.min,
ess.target = 1640.25, step.size = 0.0001)
write_rds(info.list.r5, "Round 5 information list log transform.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r6 <- abc_bcd(info.mat = info.list.r5$info.mat, paras.r5)
write.table(paras.r6, "Round 6 parameters log transform.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r6"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r6 <- as.matrix(read.table("Round 6 parameters log transform.txt", sep = "",
header = TRUE))
registerDoRNG(874512, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r6[i, 1:2], init.cells.rad = paras.r6[i, 3],
prob.death = paras.r6[i, 4], prob.prof = paras.r6[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_6_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r6 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_6_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r6 <- rbind(ls.r6, ls.temp)
print(i)
}
ls.r6 <- unname(ls.r6)
ls.r6 <- cbind(seq(1, n.sims, by = 1), ls.r6)
ind.nan <- which(is.na(ls.r6[, 2]))
# ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r6[,2]) # 1.496134
View(ls.r6)
reduction.disp(prev = 1.604418, curr = 1.530993)
write.table(ls.r6, "Round 6 Least Square.txt")
paras.r6.mean <- apply(paras.r6, 2, mean)
set.seed(874512)
RNGkind(sample.kind = "Rejection")
paras.r6.mean.res <- calculate.sse(pars = paras.r6.mean[1:2],
init.cells.rad = paras.r6.mean[3],
prob.death = paras.r6.mean[4],
prob.prof = paras.r6.mean[5])
View(paras.r6.mean.res)
write_rds(paras.r6.mean.res, "paras r6 average result.rds")
paras.r6.mean.res <- read_rds("paras r6 average result.rds")
sse.t1.r6.mean.grid <- paras.r6.mean.res$ind.position.d1
sse.t3.r6.mean.grid <- paras.r6.mean.res$ind.position.d3
cell.coord <- which(sse.t1.r6.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 40
space.length.y <- 40
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
paras.r6.mean.res <- read_rds("paras r6 average result.rds")
rotate <- function(x) t(apply(x, 2, rev))
t1.ref.den.rotate <- rotate(t1.ref.den)
t3.ref.den.rotate <- rotate(t3.ref.den)
den.mat.d1 <- paras.r6.mean.res$den.mat.d1
den.mat.d3 <- paras.r6.mean.res$den.mat.d3
den.mat.d1.rotate <- rotate(den.mat.d1)
den.mat.d3.rotate <- rotate(den.mat.d3)
grey.spectrum.full <- colorRampPalette(c("grey100", "grey0"))
grey.spectrum.50 <- grey.spectrum.full(50)
image(t1.ref.den.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(den.mat.d1.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(t3.ref.den.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(den.mat.d3.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
