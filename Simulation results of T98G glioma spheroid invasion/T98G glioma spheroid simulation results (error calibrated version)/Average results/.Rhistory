}
ls.r2 <- unname(ls.r2)
ls.r2 <- cbind(seq(1, n.sims, by = 1), ls.r2)
ind.nan <- which(is.na(ls.r2[, 2]))
ls.r2.no.nan <- ls.r2[-ind.nan, ]
mean(ls.r2[,2]) # 3.612067
mean(ls.r2.no.nan[,2]) # 3.612067
View(ls.r2)
write.table(ls.r2, "Round 2 Least Square.txt")
ls.r2.min <- read_rds("Round_2_paras5706_res.rds")
den.mat.d1.r2.min <- ls.r2.min$den.mat.d1
den.mat.d3.r2.min <- ls.r2.min$den.mat.d3
sd.den.mat.d1.r2.min <- sd(den.mat.d1.r2.min - t1.ref.den)
sd.den.mat.d3.r2.min <- sd(den.mat.d3.r2.min - t3.ref.den)
info.list.r2 <- calculate.bw(ss.mat = ls.r2, min.sd.d1 = sd.den.mat.d1.r2.min,
min.sd.d3 = sd.den.mat.d3.r2.min,
ess.target = 2250, step.size = 0.0001)
write_rds(info.list.r2, "Round 2 information list log transform.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r3 <- abc_bcd(info.mat = info.list.r2$info.mat, paras.r2)
write.table(paras.r3, "Round 3 parameters log transform.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r3"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r3 <- as.matrix(read.table("Round 3 parameters log transform.txt", sep = "",
header = TRUE))
registerDoRNG(874513, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r3[i, 1:2], init.cells.rad = paras.r3[i, 3],
prob.death = paras.r3[i, 4], prob.prof = paras.r3[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_3_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r3 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_3_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r3 <- rbind(ls.r3, ls.temp)
print(i)
}
ls.r3 <- unname(ls.r3)
ls.r3 <- cbind(seq(1, n.sims, by = 1), ls.r3)
ind.nan <- which(is.na(ls.r3[, 2]))
ls.r3.no.nan <- ls.r3[-ind.nan, ]
mean(ls.r3[,2]) # 1.946745
mean(ls.r3.no.nan[,2]) # 1.946745
View(ls.r3.no.nan)
write.table(ls.r3, "Round 3 Least Square.txt")
ls.r3.min <- read_rds("Round_3_paras3961_res.rds")
den.mat.d1.r3.min <- ls.r3.min$den.mat.d1
den.mat.d3.r3.min <- ls.r3.min$den.mat.d3
sd.den.mat.d1.r3.min <- sd(den.mat.d1.r3.min - t1.ref.den)
sd.den.mat.d3.r3.min <- sd(den.mat.d3.r3.min - t3.ref.den)
2500*0.9*0.9
info.list.r3 <- calculate.bw(ss.mat = ls.r3, min.sd.d1 = sd.den.mat.d1.r3.min,
min.sd.d3 = sd.den.mat.d3.r3.min,
ess.target = 2025, step.size = 0.0001)
write_rds(info.list.r3, "Round 3 information list log transform.rds")
View(info.list.r3)
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r4 <- abc_bcd(info.mat = info.list.r3$info.mat, paras.r3)
write.table(paras.r4, "Round 4 parameters log transform.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results_r4"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
paras.r4 <- as.matrix(read.table("Round 4 parameters log transform.txt", sep = "",
header = TRUE))
registerDoRNG(874513, once = TRUE)
RNGkind(sample.kind = "Rejection")
tic()
ests <- foreach (i = 1:n.sims, .combine = rbind) %dopar% {
sse.res.temp <- calculate.sse(pars = paras.r4[i, 1:2], init.cells.rad = paras.r4[i, 3],
prob.death = paras.r4[i, 4], prob.prof = paras.r4[i, 5])
readr::write_rds(sse.res.temp,
path = paste0("./", save.sims.dir, "/Round_4_paras", i, "_res.rds"))
c(i, sse.res.temp$diff)
}
toc()
stopCluster(cl)
ls.r4 <- vector()
for (i in 1:n.sims) {
res.temp <- read_rds(paste0("./", save.sims.dir, "/Round_4_paras",i,"_res.rds"))
ls.temp <- c(res.temp$diff, res.temp$sse.t1, res.temp$sse.t3)
ls.r4 <- rbind(ls.r4, ls.temp)
print(i)
}
ls.r4 <- unname(ls.r4)
ls.r4 <- cbind(seq(1, n.sims, by = 1), ls.r4)
ind.nan <- which(is.na(ls.r4[, 2]))
ls.r4.no.nan <- ls.r4[-ind.nan, ]
mean(ls.r4[,2]) # 1.696779
View(ls.r4)
write.table(ls.r4, "Round 4 Least Square.txt")
ls.r4.min <- read_rds("Round_4_paras7421_res.rds")
den.mat.d1.r4.min <- ls.r4.min$den.mat.d1
den.mat.d3.r4.min <- ls.r4.min$den.mat.d3
sd.den.mat.d1.r4.min <- sd(den.mat.d1.r4.min - t1.ref.den)
sd.den.mat.d3.r4.min <- sd(den.mat.d3.r4.min - t3.ref.den)
2025*0.9
info.list.r4 <- calculate.bw(ss.mat = ls.r4, min.sd.d1 = sd.den.mat.d1.r4.min,
min.sd.d3 = sd.den.mat.d3.r4.min,
ess.target = 1822.5, step.size = 0.0001)
write_rds(info.list.r4, "Round 4 information list log transform.rds")
set.seed(123)
RNGkind(sample.kind = "Rejection")
paras.r5 <- abc_bcd(info.mat = info.list.r4$info.mat, paras.r4)
write.table(paras.r5, "Round 5 parameters log transform.txt")
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 1")
rm(list = ls())
library(readr)
source("PDE 2D ABC functions adjusted.r")
paras.r6.mean.res <- read_rds("paras r6 average result.rds")
sse.t1.r6.mean.grid <- paras.r6.mean.res$ind.position.d1
sse.t3.r6.mean.grid <- paras.r6.mean.res$ind.position.d3
cell.coord <- which(sse.t3.r6.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 40
space.length.y <- 40
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
cell.coord <- which(sse.t1.r6.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 40
space.length.y <- 40
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 1")
paras.r6.mean.res <- read_rds("paras r6 average result.rds")
rotate <- function(x) t(apply(x, 2, rev))
t1.ref.den.rotate <- rotate(t1.ref.den)
t3.ref.den.rotate <- rotate(t3.ref.den)
den.mat.d1 <- paras.r6.mean.res$den.mat.d1
den.mat.d3 <- paras.r6.mean.res$den.mat.d3
den.mat.d1.rotate <- rotate(den.mat.d1)
den.mat.d3.rotate <- rotate(den.mat.d3)
grey.spectrum.full <- colorRampPalette(c("grey100", "grey0"))
grey.spectrum.50 <- grey.spectrum.full(50)
image(t1.ref.den.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(den.mat.d1.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(t3.ref.den.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(den.mat.d3.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (adaptive static time wider r stat time prior correct chi 5ps log transform)/Run 1")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores() - 1
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
set.seed(874513)
RNGkind(sample.kind = "Rejection")
dn <- runif(n.sims, 0.000069, 0.02)
rn <- runif(n.sims,0,0.0035)
init.cells.rads <- runif(n.sims, 0.01, 0.15)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
stat.time <- runif(n.sims, 24/96, 1)
paras.table <- cbind(dn, rn, init.cells.rads,
prob.death, prob.prof, stat.time)
write.table(paras.table, "Round 1 initial parameters.txt")
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (adaptive static time wider r stat time prior correct chi 5ps log transform)/Run 2")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
set.seed(874513)
RNGkind(sample.kind = "Rejection")
dn <- runif(n.sims, 0.000069, 0.02)
rn <- runif(n.sims,0,0.0035)
init.cells.rads <- runif(n.sims, 0.01, 0.15)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
stat.time <- runif(n.sims, 24/96, 1)
paras.table <- cbind(dn, rn, init.cells.rads,
prob.death, prob.prof, stat.time)
write.table(paras.table, "Round 1 initial parameters.txt")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
save.sims.dir <- "LS_results"
save.sims <- TRUE
if(save.sims) {
if(!dir.exists(save.sims.dir)) dir.create(save.sims.dir)
}
n.thread <- detectCores()/2
n.sims <- 10000
cl <- makeCluster(n.thread)
registerDoParallel(cl)
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (adaptive static time wider r stat time prior correct chi 5ps log transform)/Run 3")
set.seed(874513)
RNGkind(sample.kind = "Rejection")
dn <- runif(n.sims, 0.000069, 0.02)
rn <- runif(n.sims,0,0.0035)
init.cells.rads <- runif(n.sims, 0.01, 0.15)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
stat.time <- runif(n.sims, 24/96, 1)
paras.table <- cbind(dn, rn, init.cells.rads,
prob.death, prob.prof, stat.time)
write.table(paras.table, "Round 1 initial parameters.txt")
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 2")
warnings()
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
paras.r6.mean.res <- read_rds("paras r6 average result.rds")
sse.t1.r6.mean.grid <- paras.r6.mean.res$ind.position.d1
sse.t3.r6.mean.grid <- paras.r6.mean.res$ind.position.d3
cell.coord <- which(sse.t1.r6.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 40
space.length.y <- 40
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
cell.coord <- which(sse.t3.r6.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 40
space.length.y <- 40
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
paras.r6.mean.res <- read_rds("paras r6 average result.rds")
rotate <- function(x) t(apply(x, 2, rev))
t1.ref.den.rotate <- rotate(t1.ref.den)
t3.ref.den.rotate <- rotate(t3.ref.den)
den.mat.d1 <- paras.r6.mean.res$den.mat.d1
den.mat.d3 <- paras.r6.mean.res$den.mat.d3
den.mat.d1.rotate <- rotate(den.mat.d1)
den.mat.d3.rotate <- rotate(den.mat.d3)
grey.spectrum.full <- colorRampPalette(c("grey100", "grey0"))
grey.spectrum.50 <- grey.spectrum.full(50)
image(t1.ref.den.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(den.mat.d1.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(t3.ref.den.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(den.mat.d3.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 3")
rm(list = ls())
library(doParallel)
library(doRNG)
library(tictoc)
library(readr)
source("PDE 2D ABC functions adjusted.r")
paras.r6.mean.res <- read_rds("paras r6 average result.rds")
sse.t1.r6.mean.grid <- paras.r6.mean.res$ind.position.d1
sse.t3.r6.mean.grid <- paras.r6.mean.res$ind.position.d3
cell.coord <- which(sse.t1.r6.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 40
space.length.y <- 40
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
cell.coord <- which(sse.t3.r6.mean.grid == 1, arr.ind = TRUE)
cell.coord.x <- cell.coord[,1]
cell.coord.y <- cell.coord[,2]
space.length.x <- 40
space.length.y <- 40
x <- seq(1, space.length.x, by = 1)
y <- seq(1, space.length.y, by = 1)
plot(x[cell.coord.y[1]], y[space.length.y + 1 - cell.coord.x[1]], pch = 15,
bg = "black", xlim = c(1, space.length.x), ylim = c(1, space.length.y), cex = 1.2, xaxt = 'n', yaxt = 'n')
for (i in 2:length(cell.coord.x)) {
points(x[cell.coord.y[i]], y[space.length.y + 1 - cell.coord.x[i]],
pch = 15, cex = 1.2, bg = "black")
}
paras.r6.mean.res <- read_rds("paras r6 average result.rds")
rotate <- function(x) t(apply(x, 2, rev))
t1.ref.den.rotate <- rotate(t1.ref.den)
t3.ref.den.rotate <- rotate(t3.ref.den)
den.mat.d1 <- paras.r6.mean.res$den.mat.d1
den.mat.d3 <- paras.r6.mean.res$den.mat.d3
den.mat.d1.rotate <- rotate(den.mat.d1)
den.mat.d3.rotate <- rotate(den.mat.d3)
grey.spectrum.full <- colorRampPalette(c("grey100", "grey0"))
grey.spectrum.50 <- grey.spectrum.full(50)
image(t1.ref.den.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(den.mat.d1.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(t3.ref.den.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
image(den.mat.d3.rotate, col = grey.spectrum.50, xaxt = 'n', yaxt = 'n')
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 1")
rm(list = ls())
library(readr)
info.list.r1 <- read_rds("Round 1 information list log transform.rds")
info.list.r2 <- read_rds("Round 2 information list log transform.rds")
info.list.r3 <- read_rds("Round 3 information list log transform.rds")
info.list.r4 <- read_rds("Round 4 information list log transform.rds")
info.list.r5 <- read_rds("Round 5 information list log transform.rds")
ess.vec <- c(info.list.r1$ess.obj, info.list.r2$ess.obj, info.list.r3$ess.obj,
info.list.r4$ess.obj, info.list.r5$ess.obj)
bw.vec <- c(info.list.r1$bw.obj, info.list.r2$bw.obj, info.list.r3$bw.obj,
info.list.r4$bw.obj, info.list.r5$bw.obj)
info.mat.run1 <- unname(cbind(ess.vec, bw.vec))
View(info.mat.run1)
write.table(info.mat.run1, "Run 1 ESS BW.txt")
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 2")
rm(list = ls())
library(readr)
info.list.r1 <- read_rds("Round 1 information list log transform.rds")
info.list.r2 <- read_rds("Round 2 information list log transform.rds")
info.list.r3 <- read_rds("Round 3 information list log transform.rds")
info.list.r4 <- read_rds("Round 4 information list log transform.rds")
info.list.r5 <- read_rds("Round 5 information list log transform.rds")
ess.vec <- c(info.list.r1$ess.obj, info.list.r2$ess.obj, info.list.r3$ess.obj,
info.list.r4$ess.obj, info.list.r5$ess.obj)
bw.vec <- c(info.list.r1$bw.obj, info.list.r2$bw.obj, info.list.r3$bw.obj,
info.list.r4$bw.obj, info.list.r5$bw.obj)
info.mat.run2 <- unname(cbind(ess.vec, bw.vec))
View(info.mat.run2)
write.table(info.mat.run2, "Run 2 ESS BW.txt")
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 3")
rm(list = ls())
library(readr)
info.list.r1 <- read_rds("Round 1 information list log transform.rds")
info.list.r2 <- read_rds("Round 2 information list log transform.rds")
info.list.r3 <- read_rds("Round 3 information list log transform.rds")
info.list.r4 <- read_rds("Round 4 information list log transform.rds")
info.list.r5 <- read_rds("Round 5 information list log transform.rds")
ess.vec <- c(info.list.r1$ess.obj, info.list.r2$ess.obj, info.list.r3$ess.obj,
info.list.r4$ess.obj, info.list.r5$ess.obj)
bw.vec <- c(info.list.r1$bw.obj, info.list.r2$bw.obj, info.list.r3$bw.obj,
info.list.r4$bw.obj, info.list.r5$bw.obj)
info.mat.run3 <- unname(cbind(ess.vec, bw.vec))
View(info.mat.run3)
write.table(info.mat.run3, "Run 3 ESS BW.txt")
Round_6_paras4615_res <- readRDS("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Run 3/Round_6_paras4615_res.rds")
View(Round_6_paras4615_res)
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps log transform)/Average results")
rm(list = ls())
library(readr)
source("PDE 2D ABC functions adjusted.R")
distance.Battacharya <- function(mu1, mu2, Sigma1, Sigma2) {
#mu1 <- ref.mean
#mu2 <- run1.mean
#Sigma1 <- ref.cov
#Sigma2 <- run1.cov
d <- length(mu1)
if (d != length(mu2)) return(Inf)
Sigma <- (Sigma1 + Sigma2)/2
fit <- svd(Sigma)
i <- zapsmall(fit$d) != 0
#
# Compute the log determinant terms.
#
logdet <- function(X) determinant(t(fit$u[, i]) %*% X %*% fit$v[,i], log=TRUE)$modulus
q <- c(sum(log(fit$d[i])), -logdet(Sigma1)/2, -logdet(Sigma2)/2)
#
# Compute the Mahalanobis distance term.
#
dmu <- mu1 - mu2
if(any(t(fit$u[, !i]) %*% dmu != 0)) return(Inf)
y <- fit$v[,i] %*% diag(1/fit$d[i], sum(i), sum(i)) %*% t(fit$u[, i]) %*% dmu
sum(dmu * y)/8 + sum(q)/2
}
paras.r6.run1.res <- read_rds("paras r6 average result run 1.rds")
paras.r6.run2.res <- read_rds("paras r6 average result run 2.rds")
paras.r6.run3.res <- read_rds("paras r6 average result run 3.rds")
paras.r6.run1 <- as.matrix(read.table("Round 6 parameters log transform run 1.txt", sep = "", header = TRUE))
paras.r6.run2 <- as.matrix(read.table("Round 6 parameters log transform run 2.txt", sep = "", header = TRUE))
paras.r6.run3 <- as.matrix(read.table("Round 6 parameters log transform run 3.txt", sep = "", header = TRUE))
paras.r6.run1.mean <- apply(paras.r6.run1, 2, mean)
paras.r6.run2.mean <- apply(paras.r6.run2, 2, mean)
paras.r6.run3.mean <- apply(paras.r6.run3, 2, mean)
paras.ests <- rbind(paras.r6.run1.mean, paras.r6.run2.mean,
paras.r6.run3.mean)
run1.den.mat.d1 <- paras.r6.run1.res$den.mat.d1
run2.den.mat.d1 <- paras.r6.run2.res$den.mat.d1
run3.den.mat.d1 <- paras.r6.run3.res$den.mat.d1
run1.den.mat.d3 <- paras.r6.run1.res$den.mat.d3
run2.den.mat.d3 <- paras.r6.run2.res$den.mat.d3
run3.den.mat.d3 <- paras.r6.run3.res$den.mat.d3
ref.mean <- c(mean(t1.ref.den), mean(t3.ref.den))
ref.data <- data.frame(t1.ref.den = as.numeric(t1.ref.den),
t3.ref.den = as.numeric(t3.ref.den))
ref.cov <- cov(ref.data)
### Run 1 ###
run1.mean <- c(mean(run1.den.mat.d1), mean(run1.den.mat.d3))
run1.data <- data.frame(run1.den.mat.d1 = as.numeric(run1.den.mat.d1),
run1.den.mat.d3 = as.numeric(run1.den.mat.d3))
run1.cov <- cov(run1.data)
bcd.run1.ref <- distance.Battacharya(mu1 = ref.mean, mu2 = run1.mean,
Sigma1 = ref.cov, Sigma2 = run1.cov)
### Run 2 ###
run2.mean <- c(mean(run2.den.mat.d1), mean(run2.den.mat.d3))
run2.data <- data.frame(run2.den.mat.d1 = as.numeric(run2.den.mat.d1),
run2.den.mat.d3 = as.numeric(run2.den.mat.d3))
run2.cov <- cov(run2.data)
bcd.run2.ref <- distance.Battacharya(mu1 = ref.mean, mu2 = run2.mean,
Sigma1 = ref.cov, Sigma2 = run2.cov)
### Run 3 ###
run3.mean <- c(mean(run3.den.mat.d1), mean(run3.den.mat.d3))
run3.data <- data.frame(run3.den.mat.d1 = as.numeric(run3.den.mat.d1),
run3.den.mat.d3 = as.numeric(run3.den.mat.d3))
run3.cov <- cov(run3.data)
bcd.run3.ref <- distance.Battacharya(mu1 = ref.mean, mu2 = run3.mean,
Sigma1 = ref.cov, Sigma2 = run3.cov)
bcd.run1.ref
bcd.run2.ref
bcd.run3.ref
write_rds(list(paras.ests.3runs = paras.ests, paras.final.est = paras.r6.run2.mean),
"Glioma final parameter estimates err calib.rds")
ess.bw.run1 <- as.matrix(read.table("Run 1 ESS BW.txt", sep = "", header = TRUE))
ess.bw.run2 <- as.matrix(read.table("Run 2 ESS BW.txt", sep = "", header = TRUE))
ess.bw.run3 <- as.matrix(read.table("Run 3 ESS BW.txt", sep = "", header = TRUE))
# ESS plot
plot(x = seq(1,5,by = 1), y = ess.bw.run1[,1], lwd = 2, xlab = "Rounds",
ylab = "Effective Sample Size", xlim = c(1,9), ylim = c(1500,2600),
col = "purple", main = "Actual effective sample size at different rounds")
points(x = seq(1,5,by = 1), y = ess.bw.run2[,1], pch = 2, lwd = 2, col = "red")
points(x = seq(1,5,by = 1), y = ess.bw.run3[,1], pch = 10, lwd = 2, col = "blue")
abline(h = 1500, col = "black", lty = 2, lwd = 2)
legend(7.5, 2400, legend = c("Run 1", "Run 2", "Run 3"),
col = c("purple", "red", "blue", "black"), pch = c(1,2,10))
plot(x = seq(1,5,by = 1), y = ess.bw.run1[,2], lwd = 2, xlab = "Rounds",
ylab = "Weight factor", xlim = c(1,9), ylim = c(0, 0.1),
col = "purple", main = "Weight factor at different rounds")
points(x = seq(1,5,by = 1), y = ess.bw.run2[,2], pch = 2, lwd = 2, col = "red")
points(x = seq(1,5,by = 1), y = ess.bw.run3[,2], pch = 10, lwd = 2, col = "blue")
legend(7.5, 0.1, legend = c("Run 1", "Run 2", "Run 3"),
col = c("purple", "red", "blue", "black"), pch = c(1,2,10))
View(run3.data)
View(ess.bw.run3)
View(ess.bw.run1)
View(ess.bw.run2)
