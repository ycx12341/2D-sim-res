counter <- counter * 10
if (current.page == 1) {
if (call.page == "previous") {
return("You have already reached page 1!")
} else if (call.page == "next") {
counter <- counter + 10
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
}
} else if (current.page == 17) {
if (call.page == "previous") {
counter <- counter - 10
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
} else if (call.page == "next") {
counter <- counter + 2
current.page <- 18
return(paste0("You are at page ", current.page, " now!"))
}
} else {
if (call.page == "previous") {
counter <- counter - 10
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
} else if (call.page == "next") {
counter <- counter + 10
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
}
}
}
if (current.page == 18) {
counter <- 172
if (call.page == "previous") {
counter <- counter - 2
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
} else if (call.page == "next") {
return(paste0("You have reached the last page!"))
}
}
}
page.selection(current.page = 1, call.page = "next")
page.selection <- function(current.page, call.page) {
if (1 <= current.page && current.page <= 17) {
counter <- current.page * 10
if (current.page == 1) {
if (call.page == "previous") {
return("You have already reached page 1!")
} else if (call.page == "next") {
counter <- counter + 10
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
}
} else if (current.page == 17) {
if (call.page == "previous") {
counter <- counter - 10
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
} else if (call.page == "next") {
counter <- counter + 2
current.page <- 18
return(paste0("You are at page ", current.page, " now!"))
}
} else {
if (call.page == "previous") {
counter <- counter - 10
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
} else if (call.page == "next") {
counter <- counter + 10
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
}
}
}
if (current.page == 18) {
counter <- 172
if (call.page == "previous") {
counter <- counter - 2
current.page <- counter/10
return(paste0("You are at page ", current.page, " now!"))
} else if (call.page == "next") {
return(paste0("You have reached the last page!"))
}
}
}
page.selection(current.page = 1, call.page = "next")
page.selection(current.page = 1, call.page = "previous")
page.selection(current.page = 2, call.page = "previous")
page.selection(current.page = 2, call.page = "next")
page.selection(current.page = 18, call.page = "previous")
page.selection(current.page = 18, call.page = "next")
page.selection(current.page = 15, call.page = "next")
page.selection(current.page = 14, call.page = "next")
page.selection(current.page = 14, call.page = "previous")
pnorm(10400, 10250, sqrt(11250))
pnorm(10400/50, 10250/50, sqrt(11250)/50)
sqrt(11250)/50
10400/50
10250/50
pnorm(10400/50, 10250/50, sqrt(11250)/sqrt(50))
sqrt(11250)
pnorm(10400, 10250, 11250)
pnorm(80.8, 80, 12)
pnorm(50500, 50000, 90000)
pnorm(50500, 50000, sqrt(90000))
rm(list = ls())
n.sims <- 10000
set.seed(874513)
dn <- runif(n.sims, 0.000069, 0.02)
gamma <- runif(n.sims, 0.005, 0.26)
rn <- runif(n.sims,3.5,9)
eta <- runif(n.sims, 7,18)
dm <- runif(n.sims,0.0001,0.033)
alpha <- runif(n.sims,0.07,0.18)
init.cells.cols <- sample(c(1,2,3,4,5), n.sims, replace = TRUE)
prob.death <- runif(n.sims, 0.01, 0.1)
prob.prof <- runif(n.sims, 0.2, 1)
paras.table <- cbind(dn, gamma, rn, eta, dm, alpha, init.cells.cols,
prob.death, prob.prof)
((7 * 20.276) + (9 * 14.812))/16
(19.11 - 13.61) / (sqrt(17.2025) * sqrt(0.125 + 0.1))
pt(2.796, 16)
2*(1 - pt(2.796, 16))
qf(0.025, 7, 9)
qf(0.975, 7, 9)
14.812/20.276
qf(0.025, 9, 7)
qf(0.975, 9, 7)
((8 * (420^2)) + (15 * (390^2)))/23
(1309 - 1205) / (sqrt(160552.2) * sqrt((1/9) + (1/16)))
(420/390)^2
9 + 25 + 1 + 16 + 9 + 49 + 1
16 * 16 /8
-2 / sqrt(78/7/8)
((4 * 0.96^2) + (4 * 1.08^2))/8
(45.2 - 43.9)/sqrt(1.044 * (2/5))
2*(1-pt(2.012,8))
sl <- c(48.3, 47.6, 49.2, 50.3, 48.8, 51.1, 49.0, 48.1)
ha <- c(50.4, 47.3, 50.8, 52.3, 47.7, 54.5, 48.9, 49.9)
mean(sl-ha)
diff <- sl - ha
sum(diff ^ 2)
1/7 * (sum(diff^2) - 8 * (mean(diff) ^ 2))
8 * (mean(diff) ^ 2)
-1.175/sqrt(2.291/8)
mean(c(25, 33, 43, 45))
mean(c(15, 16, 16, 17, 20, 23, 28, 28, 35, 35))
32/1001
mean(c(13, 14, 10, 13))
mean(c(19, 17, 18, 13, 20, 15))
factorial(10)/(factorial(4) * factorial(6))
sample(c(0,1,2,3), size = 8, replace = TRUE)
set.seed(123)
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(123)
RNGkind(sample.kind = "Rejection")
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(123)
RNGkind(sample.kind = "Rejection")
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(123)
sample(c(0,1,2,3),size = 8, replace = TRUE)
rm(list = ls())
set.seed(123)
sample(c(0,1,2,3),size = 8, replace = TRUE)
?RNGkind
RNGkind(sample.kind = "default")
set.seed(123)
sample(c(0,1,2,3),size = 8, replace = TRUE)
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(123)
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(123)
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(345)
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(345)
RNGkind(sample.kind = "Rejection")
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(345)
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(345)
RNGkind(sample.kind = "Rejection")
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(345)
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(345)
RNGkind(sample.kind = "Rejection")
sample(c(0,1,2,3),size = 8, replace = TRUE)
set.seed(345)
RNGkind(sample.kind = "NULL")
RNGkind(sample.kind = NULL)
RNGkind(sample.kind = "NULL")
RNGkind(sample.kind = NULL)
sample(c(0,1,2,3),size = 8, replace = TRUE)
rm(list = ls())
set.seed(345)
sample(c(0,1,2,3), size = 9, replace = TRUE)
set.seed(345)
RNGkind(sample.kind = "Rejection")
sample(c(0,1,2,3), size = 9, replace = TRUE)
set.seed(345)
sample(c(0,1,2,3), size = 9, replace = TRUE)
sample.int(5, 6, replace = TRUE)
set.seed(345)
sample.int(5, 6, replace = TRUE)
set.seed(345)
RNGkind(sample.kind = "Rejection")
sample.int(5, 6, replace = TRUE)
set.seed(123)
sample.int(5,9,replace = TRUE)
set.seed(123)
RNGkind(sample.kind = "Rejection")
sample.int(5,9,replace = TRUE)
set.seed(123)
sample.int(5,9,replace = TRUE)
set.seed(123)
sample.int(5,6,replace = TRUE)
sample.int(5,6,replace = TRUE)
set.seed(123)
sample.int(5,6,replace = TRUE)
set.seed(123)
RNGkind(sample.kind = "Rejection")
sample.int(5,6,replace = TRUE)
set.seed(123)
sample.int(5,6,replace = TRUE)
set.seed(123)
sample.int(5, 9, replace = TRUE)
set.seed(123)
sample.int(5, 9, replace = TRUE)
set.seed(123)
RNGkind(sample.kind = "Rejection")
sample.int(5, 9, replace = TRUE)
rm(list = ls())
set.seed(123)
sample(c(0,1,2,3), replace = TRUE, size = 9)
set.seed(123)
sample(c(0,1,2,3), replace = TRUE, size = 9)
set.seed(123)
RNGkind(sample.kind = "Rejection")
sample(c(0,1,2,3), replace = TRUE, size = 9)
set.seed(123)
sample(c(0,1,2,3), replace = TRUE, size = 12)
set.seed(123)
sample(c(0,1,2,3), replace = TRUE, size = 12)
sample.int(3,5, replace = TRUE)
set.seed(123)
sample.int(3,5, replace = TRUE)
set.seed(123)
RNGkind(sample.kind = "Rejection")
sample.int(3,5, replace = TRUE)
set.seed(123)
sample.int(3, 7, replace = TRUE)
set.seed(123)
RNGkind(sample.kind = "Rejection")
sample.int(3, 7, replace = TRUE)
qt(0.025, 12)
qt(0.975, 12)
-20.9939 + qt(0.975, 12) * 4.3774
-20.9939 - qt(0.975, 12) * 4.3774
9.3295 - qt(0.975, 12) * 1.0127
9.3295 + qt(0.975, 12) * 1.0127
7.8727 + qt(0.975, 12) * 0.8764
7.8727 - qt(0.975, 12) * 0.8764
pf(11.43, 2, 47)
qt(0.975, 12)
0.004/((4*((1/47)^2)))
((1/47)^2)/(4*0.004)
A <- readLines(con <- file("Unicode.txt", encoding = "UCS-2LE"))
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/CT on run 1")
parameters <- data.frame(read.table("Round 7 parameters.txt", sep = "",
header = TRUE))
library(readr)
sumstats.list <- read_rds("Full output paras r7 run 1.rds")
View(sumstats.list)
sumstats <- matrix(0, nrow = 10000, ncol = 100)
View(sumstats.list)
sumstats.list[[1]]
for (i in 1:10000) {
sumstats[i,] <- c(sumstats.list[[i]]$den.mat.d1, sumstats.list[[i]]$den.mat.d3)
}
sumstats.list <- read_rds("Full output paras r7 run 1.rds")
sumstats <- matrix(0, nrow = 10000, ncol = 200)
for (i in 1:10000) {
sumstats[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d1),
as.vector(sumstats.list[[i]]$den.mat.d3))
}
View(sumstats)
install.packages("abctools")
install.packages("abctools")
library(abctools)
warnings()
covdiag <- cov.pi(param = parameters,
sumstat = sumstats,
testsets = 1:200,
tol = c(0.225), diagnostics = c("KS"))
sumstats <- as.data.frame(sumstats)
covdiag <- cov.pi(param = parameters,
sumstat = sumstats,
testsets = 1:200,
tol = c(0.225), diagnostics = c("KS"))
View(covdiag)
covdiag[["diag"]][["pvalue"]]
hist(covdiag$raw$V1)
hist(covdiag$raw$V2)
hist(covdiag$raw$V3)
hist(covdiag$raw$V4)
hist(covdiag$raw$V5)
p.vals <- covdiag$diag$pvalue
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/CT on run 2")
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/CT on run 2")
rm(list = ls())
library(readr)
library(abctools)
parameters <- data.frame(read.table("Round 7 parameters.txt", sep = "",
header = TRUE))
sumstats.list <- read_rds("Full output paras r7 run 2.rds")
sumstats <- matrix(0, nrow = 10000, ncol = 200)
for (i in 1:10000) {
sumstats[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d1),
as.vector(sumstats.list[[i]]$den.mat.d3))
}
sumstats <- as.data.frame(sumstats)
covdiag <- cov.pi(param = parameters,
sumstat = sumstats,
testsets = 1:200,
tol = c(0.225), diagnostics = c("KS"))
View(covdiag)
p.vals <- covdiag$diag$pvalue
p.vals
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/CT on run 3")
rm(list = ls())
library(readr)
library(abctools)
parameters <- data.frame(read.table("Round 7 parameters.txt", sep = "",
header = TRUE))
sumstats.list <- read_rds("Full output paras r7 run 3.rds")
sumstats <- matrix(0, nrow = 10000, ncol = 200)
for (i in 1:10000) {
sumstats[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d1),
as.vector(sumstats.list[[i]]$den.mat.d3))
}
sumstats <- as.data.frame(sumstats)
covdiag <- cov.pi(param = parameters,
sumstat = sumstats,
testsets = 1:200,
tol = c(0.225), diagnostics = c("KS"))
View(covdiag)
covdiag[["diag"]][["pvalue"]]
setwd("F:/学术/Glioma simulation/Second set of invasion pattern/40_40 (less fixed static time wider r prior correct chi 5ps)/CT on run 3")
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 3 simulations/CT on run 3 d3")
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 3 simulations/CT on run 3 d3")
rm(list = ls())
library(readr)
library(abctools)
parameters <- data.frame(read.table("Round 7 parameters.txt", sep = "",
header = TRUE))
parameters <- data.frame(read.table("Round 11 parameters.txt", sep = "",
header = TRUE))
ls.r11 <- as.matrix(read.table("Round 11 Least Sqaure.txt", sep = "",
header = TRUE))
read.table("Round 11 Least Square.txt")
ls.r11 <- as.matrix(read.table("Round 11 Least Sqaure.txt", sep = "",
header = TRUE))
ls.r11 <- read.table("Round 11 Least Sqaure.txt", sep = "",
header = TRUE)
ls.r11 <- read.table("Round 11 Least Square.txt", sep = "",
header = TRUE)
paras.r11.valid <- paras.r11[-which(is.na(ls.r11[,2])), ]
parasmeters.valid <- parameters[-which(is.na(ls.r11[,2])), ]
nan.ind <- which(is.na(ls.r11[,2]))
sumstats.list <- read_rds("Full output paras r11 run 3 valid.rds")
View(sumstats.list)
sumstats.valid <- matrix(0, nrow = 9978, ncol = 84)
for (i in 1:9978) {
sumstats[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d1),
as.vector(sumstats.list[[i]]$den.mat.d3))
}
sumstats.list <- read_rds("Full output paras r11 run 3 valid.rds")
sumstats.valid <- matrix(0, nrow = 9978, ncol = 84)
for (i in 1:9978) {
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d3))
}
View(sumstats.valid)
sumstats <- as.data.frame(sumstats)
sumstats.valid <- as.data.frame(sumstats.valid)
covdiag <- cov.pi(param = parameters.valid,
sumstat = sumstats.valid,
testsets = 1:200,
tol = c(0.164025), diagnostics = c("KS"))
parameters.valid <- parameters[-which(is.na(ls.r11[,2])), ] # 9978
covdiag <- cov.pi(param = parameters.valid,
sumstat = sumstats.valid,
testsets = 1:200,
tol = c(0.164025), diagnostics = c("KS"))
View(covdiag)
covdiag[["diag"]][["pvalue"]]
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 6 simulations/CT on run 2 d6")
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 6 simulations/CT on run 2 d6")
rm(list = ls())
library(readr)
library(abctools)
parameters <- data.frame(read.table("Round 11 parameters.txt", sep = "",
header = TRUE))
parameters <- data.frame(read.table("Round 6 parameters.txt", sep = "",
header = TRUE))
ls.r6 <- read.table("Round 6 Least Square.txt", sep = "",
header = TRUE)
nan.ind <- which(is.na(ls.r11[,2]))
nan.ind <- which(is.na(ls.r6[,2]))
parameters.valid <- parameters[-which(is.na(ls.r6[,2])), ] # 9978
sumstats.list <- read_rds("Full output paras r6 run 2 valid.rds")
sumstats.valid <- matrix(0, nrow = 9975, ncol = 84)
for (i in 1:9975) {
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d3))
}
sumstats.list <- read_rds("Full output paras r6 run 2 valid.rds")
sumstats.valid <- matrix(0, nrow = 9975, ncol = 84)
for (i in 1:9975) {
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d6))
}
sumstats.valid <- as.data.frame(sumstats.valid)
covdiag <- cov.pi(param = parameters.valid,
sumstat = sumstats.valid,
testsets = 1:200,
tol = c(0.25), diagnostics = c("KS"))
View(covdiag)
covdiag[["diag"]][["pvalue"]]
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 9 simulations/CT on run 1 d9")
rm(list = ls())
library(readr)
library(abctools)
parameters <- data.frame(read.table("Round 6 parameters.txt", sep = "",
header = TRUE))
ls.r6 <- read.table("Round 6 Least Square.txt", sep = "",
header = TRUE)
nan.ind <- which(is.na(ls.r6[,2]))
parameters.valid <- parameters[-which(is.na(ls.r6[,2])), ] # 9975
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 9 simulations/CT on run 1 d9")
sumstats.list <- read_rds("Full output paras r6 run 1 valid.rds")
sumstats.valid <- matrix(0, nrow = 9989, ncol = 84)
for (i in 1:9975) {
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d6))
}
sumstats.list <- read_rds("Full output paras r6 run 1 valid.rds")
sumstats.valid <- matrix(0, nrow = 9989, ncol = 84)
for (i in 1:9989) {
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d9))
}
sumstats.valid <- as.data.frame(sumstats.valid)
covdiag <- cov.pi(param = parameters.valid,
sumstat = sumstats.valid,
testsets = 1:200,
tol = c(0.25), diagnostics = c("KS"))
View(covdiag)
covdiag[["diag"]][["pvalue"]]
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 12 simulations/CT on run 1 d12")
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 12 simulations/CT on run 1 d12")
rm(list = ls())
library(readr)
library(abctools)
parameters <- data.frame(read.table("Round 6 parameters.txt", sep = "",
header = TRUE))
ls.r6 <- read.table("Round 6 Least Square.txt", sep = "",
header = TRUE)
nan.ind <- which(is.na(ls.r6[,2]))
parameters.valid <- parameters[-which(is.na(ls.r6[,2])), ] # 9989
sumstats.list <- read_rds("Full output paras r6 run 1 valid.rds")
sumstats.valid <- matrix(0, nrow = 9954, ncol = 84)
for (i in 1:9954) {
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d9))
}
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d12))
sumstats.list <- read_rds("Full output paras r6 run 1 valid.rds")
sumstats.valid <- matrix(0, nrow = 9954, ncol = 84)
for (i in 1:9954) {
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d12))
}
sumstats.valid <- as.data.frame(sumstats.valid)
covdiag <- cov.pi(param = parameters.valid,
sumstat = sumstats.valid,
testsets = 1:200,
tol = c(0.25), diagnostics = c("KS"))
p.vals <- covdiag$diag$pvalue
View(covdiag)
covdiag[["diag"]][["pvalue"]]
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 14 simulations/CT on run 2 d14")
setwd("F:/学术/SCC cells simulation/SCC cells simulation (patterns fitted separately correct set.seed)/Non integer cols decreasing ess 2500 1500 (positive dens)/Day 14 simulations/CT on run 2 d14")
rm(list = ls())
library(readr)
library(abctools)
parameters <- data.frame(read.table("Round 5 parameters.txt", sep = "",
header = TRUE))
ls.r5 <- read.table("Round 5 Least Square.txt", sep = "",
header = TRUE)
nan.ind <- which(is.na(ls.r5[,2]))
parameters.valid <- parameters[-which(is.na(ls.r5[,2])), ] # 9954
View(parameters.valid)
sumstats.list <- read_rds("Full output paras r5 run 2 valid.rds")
sumstats.valid <- matrix(0, nrow = 9948, ncol = 84)
for (i in 1:9948) {
sumstats.valid[i,] <- c(as.vector(sumstats.list[[i]]$den.mat.d14))
}
sumstats.valid <- as.data.frame(sumstats.valid)
covdiag <- cov.pi(param = parameters.valid,
sumstat = sumstats.valid,
testsets = 1:200,
tol = c(0.164025), diagnostics = c("KS"))
View(covdiag)
covdiag[["diag"]][["pvalue"]]
